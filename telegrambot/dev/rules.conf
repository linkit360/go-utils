ALERT MumbaiCampaignLoadError
IF campaign_load_error > 0
LABELS {
  severity = "major",
}
ANNOTATIONS {
  summary = "{{ .Labels.job}} dispatcherd has campaign load errors",
  description = "Not fatal, but new campaign cannot be processed",
}

ALERT ServiceDown
IF up == 0
FOR 10m
LABELS {
	severity="critical"
}
ANNOTATIONS {
	summary = "Service {{ .Labels.job}} down",
	description = "Service {{.Labels.job}} ({{.Labels.instance}}) has been down for more than 5 minutes.",
}

ALERT ContentdErrors
IF contentd_rpc_errors{job="dispatcherd"} > 0
FOR 3m
LABELS {
	severity="major"
}
ANNOTATIONS {
	summary = "Service {{ .Labels.job}} has errors",
	description = "Service {{.Labels.job}} ({{.Labels.instance}}) has errors more than 3 minutes",
}

ALERT LongAgoSuccessPaid
IF since_success_paid > 600
LABELS {
	severity="major"
}
ANNOTATIONS {
	summary = "{{ .Labels.job}} successful charge was more than 10min ago",
	description = "{{.Labels.job}} ({{.Labels.instance}}): since {{ $value }}s",
}


ALERT RBMQNotifierErrors
IF rbmq_notifier_errors > 5
FOR 5m
LABELS {
	severity="critical"
}
ANNOTATIONS {
	summary = "{{ .Labels.job}} ({{.Labels.instance}}) has rbmq notifier errors",
	description = "",
}


ALERT RBMQPendingBuffer
IF rbmq_notifier_buffer_pending_gauge_size > 50
FOR 5m
LABELS {
	severity="critical"
}
ANNOTATIONS {
	summary = "{{ .Labels.job}} ({{.Labels.instance}}) pending buffer is too big",
	description = "",
}


ALERT InMemory
IF rpc_inmem_errors > 2
FOR 3m
LABELS {
	severity="critical"
}
ANNOTATIONS {
	summary = "{{ .Labels.job}} has inmemory RPC call errors",
	description = "{{.Labels.job}} ({{.Labels.instance}}) inmemory rpc calls",
}

ALERT QueueSize
IF rbmq_consumer_mobilink_requests_queue_size > 5000
FOR 5m
LABELS {
	severity="major"
}
ANNOTATIONS {
	summary = "{{.Labels.job}} {{ .Labels.instance}} queue size is too big",
	description = "queue: mobilink_requests, size: {{ $value }}",
}

ALERT QueueSize
IF rbmq_consumer_mobilink_mo_tarifficate_queue_size > 1000
FOR 5m
LABELS {
	severity="major"
}
ANNOTATIONS {
	summary = "{{.Labels.job}}  {{ .Labels.instance}} queue size is too big",
	description = "queue: mobilink_mo_tarifficate, size: {{ $value }}",
}

ALERT QueueSize
IF rbmq_consumer_mobilink_new_subscriptions_queue_size > 1000
FOR 5m
LABELS {
	severity="major"
}
ANNOTATIONS {
	summary = "{{.Labels.job}}  {{ .Labels.instance}} queue size is too big",
	description = "queue: mobilink_new_subscriptions, size: {{ $value }}",
}

ALERT QueueSize
IF rbmq_consumer_pixels_queue_size > 5000
FOR 5m
LABELS {
	severity="major"
}
ANNOTATIONS {
	summary = "{{.Labels.job}}  {{ .Labels.instance}} queue size is too big",
	description = "queue: pixels, size: {{ $value }}",
}


ALERT QueueSize
IF rbmq_consumer_mobilink_responses_queue_size > 5000
FOR 5m
LABELS {
	severity="major"
}
ANNOTATIONS {
	summary = "{{.Labels.job}}  {{ .Labels.instance}} queue size is too big",
	description = "queue: mobilink_responses, size: {{ $value }}",
}

ALERT QueueSize
IF rbmq_consumer_mt_manager_queue_size > 5000
FOR 5m
LABELS {
	severity="major"
}
ANNOTATIONS {
	summary = "{{.Labels.job}}  {{ .Labels.instance}} queue size is too big",
	description = "queue: mt_manager, size: {{ $value }}",
}


ALERT QueueSize
IF rbmq_consumer_transaction_log_queue_size > 1000
FOR 5m
LABELS {
	severity="major"
}
ANNOTATIONS {
	summary = "{{.Labels.job}}  {{ .Labels.instance}} queue size is too big",
	description = "queue: transaction_log, size: {{ $value }}",
}

ALERT QueueSize
IF rbmq_consumer_user_actions_queue_size > 1000
FOR 5m
LABELS {
	severity="major"
}
ANNOTATIONS {
	summary = "{{.Labels.job}}  {{ .Labels.job}} queue size is too big",
	description = "queue: user_actions, size: {{ $value }}",
}

ALERT QueueSize
IF rbmq_consumer_access_campaign_queue_size > 1000
FOR 5m
LABELS {
	severity="major"
}
ANNOTATIONS {
	summary = "{{.Labels.job}}  {{ .Labels.instance}} queue size is too big",
	description = "queue: access_campaign, size: {{ $value }}",
}

ALERT QueueSize
IF rbmq_consumer_content_sent_queue_size > 1000
FOR 5m
LABELS {
	severity="major"
}
ANNOTATIONS {
	summary = "{{.Labels.job}}  {{ .Labels.instance}} queue size is too big",
	description = "queue: content_sent, size: {{ $value }}",
}



ALERT Memory
IF process_resident_memory_bytes > 1000000000
FOR 5m
LABELS {
	severity="major"
}
ANNOTATIONS {
	summary = "Took too much memory ({{ $value }})",
	description = "{{.Labels.job}} {{ .Labels.instance}}",
}


ALERT DiskSpace
IF node_filesystem_free{device="/dev/xvda1"} < 17916411904
FOR 5m
LABELS {
	severity="major"
}
ANNOTATIONS {
	summary = "{{.Labels.job}} {{ .Labels.instance}} disk space is too low ({{ $value }})",
	description = "",
}